{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_salesData",
						"type": "DatasetReference"
					},
					"name": "salesSourceDf"
				},
				{
					"dataset": {
						"referenceName": "ds_SinkSaleDataWarehouse",
						"type": "DatasetReference"
					},
					"name": "sinkTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_SinkSaleDataWarehouse",
						"type": "DatasetReference"
					},
					"name": "sinkSalesWh"
				},
				{
					"dataset": {
						"referenceName": "ds_SinkSaleDataWarehouse",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     enableNativeCdc: true,",
				"     netChanges: true,",
				"     skipInitialLoad: true,",
				"     waterMarkColumn: 'Modified_date',",
				"     batchSize: 1000,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     mode: 'read') ~> salesSourceDf",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sinkTable",
				"salesSourceDf derive(isLatest = 1) ~> derivedColumn1",
				"salesSourceDf, sinkTable lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(!isNull(sink_id)) ~> filter1",
				"derivedColumn2 alterRow(updateIf(1==1)) ~> alterRow1",
				"filter1 derive(is_Latest = 0) ~> derivedColumn2",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1)) ~> sinkSalesWh",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}